import os from 'os';
import dateFormat from 'dateformat';

export function createResultMessage(weatherData,cityName)
{
    var result = cityName + os.EOL + convertUnixDataToDay(weatherData[0].dt)+ " " + "–°–µ–≥–æ–¥–Ω—è" + os.EOL + 
    convertUnixDataToHours(weatherData[0].dt) + " " + weatherData[0].main.temp + "C "  + weatherData[0].weather[0].description 
    +  emojiForWeather(weatherData[0].weather[0].description) + os.EOL;
    for(var i = 1; i < weatherData.length; i++)
    {
        
        if(convertUnixDataToDay(weatherData[i-1].dt) != convertUnixDataToDay(weatherData[i].dt))
        {
            result += convertUnixDataToDay(weatherData[i].dt)+ " " + convertUnixDataToDayAndMounth(weatherData[i].dt) + os.EOL;
            continue;
        }
        var weatherDescription = weatherData[i].weather[0].description;
        result += convertUnixDataToHours(weatherData[i].dt) + " "
                + weatherData[i].main.temp + "C "  + weatherDescription 
                + emojiForWeather(weatherDescription) + os.EOL;
    }
    return result;
}

function convertUnixDataToDay(unixTimeStamp)
{
    const dateObject = new Date(unixTimeStamp * 1000);
    return dateObject.toLocaleString("ru-RU",{weekday: "long"});
}

function convertUnixDataToDayAndMounth(unixTimeStamp)
{
    const dateObject = new Date(unixTimeStamp * 1000);
    return dateFormat(dateObject,"dd.mm");
}

function convertUnixDataToHours(unixTimeStamp)
{
    const dateObject = new Date(unixTimeStamp * 1000);
    return dateFormat(dateObject,"HH:MM");
}

function emojiForWeather(weatherDescription)
{
    switch(weatherDescription)
    {
        case '—è—Å–Ω–æ': return '‚òÄÔ∏è';
        case '–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å': return 'üå§';
        case '–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏':return 'üå•';
        case '–ø–∞—Å–º—É—Ä–Ω–æ': return '‚òÅÔ∏è';
        case '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å': return 'üå¶';
        case '–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å': return 'üå§';
        case '–¥–æ–∂–¥—å': return 'üåß';
        case '—Ç—É–º–∞–Ω': return 'üå´';
        case '—Å–Ω–µ–≥': return '‚ùÑÔ∏è';
        case '–≥—Ä–æ–∑–∞': return '‚õà';
        case '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥':return 'üå®Ô∏è';
        default: return '';
    }
}